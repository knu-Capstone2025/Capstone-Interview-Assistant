name: 🚀 Run Test Code on Develop PR

on:
  pull_request:
    branches:
      - develop

permissions:
  contents: write
  checks: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: 🧑‍💻 Checkout Code
        uses: actions/checkout@v4

      - name: 🔧 Set up .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '9.0.x'

      - name: 📦 Restore Dependencies
        run: dotnet restore

      - name: 🏗️ Build Project
        run: dotnet build --no-restore

      - name: 🖥️ Set up XVFB for Headless Browser
        run: |
          sudo apt-get install -y xvfb
          nohup Xvfb :99 -ac -screen 0 1280x1024x24 &

      - name: 🔐 Trust ASP.NET Core Developer Certificate
        run: dotnet dev-certs https --trust

      - name: 🌐 Install Playwright Browsers
        run: |
          npm install -g playwright
          npx playwright install

      - name: 🔧 Install Playwright CLI for .NET
        run: |
          dotnet tool install --global Microsoft.Playwright.CLI
          dotnet tool update --global Microsoft.Playwright.CLI
          playwright install

      - name: 🧪 Run Tests for InterviewAssistant.Common.Tests
        run: dotnet test test/InterviewAssistant.Common.Tests/InterviewAssistant.Common.Tests.csproj --no-build --logger "trx;LogFileName=common_tests.trx" --results-directory ./test-results
        continue-on-error: true

      - name: 🧪 Run Tests for InterviewAssistant.ApiService.Tests
        run: dotnet test test/InterviewAssistant.ApiService.Tests/InterviewAssistant.ApiService.Tests.csproj --no-build --logger "trx;LogFileName=apiservice_tests.trx" --results-directory ./test-results
        continue-on-error: true

      - name: 🧪 Run Tests for InterviewAssistant.Web.Tests
        run: dotnet test test/InterviewAssistant.Web.Tests/InterviewAssistant.Web.Tests.csproj --no-build --logger "trx;LogFileName=web_tests.trx" --results-directory ./test-results
        continue-on-error: true

      - name: 🧪 Run Tests for InterviewAssistant.AppHost.Tests
        run: dotnet test test/InterviewAssistant.AppHost.Tests/InterviewAssistant.AppHost.Tests.csproj --no-build --logger "trx;LogFileName=apphost_tests.trx" --results-directory ./test-results
        continue-on-error: true

      - name: 🔄 Convert Test Results to JUnit Format
        run: |
          dotnet tool install --global trx2junit
          find ./test-results -name '*.trx' -exec trx2junit {} \;

      - name: 📑 Publish Test Results as PR Comment
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: '**/test-results/*.xml'
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: ✅ Add Check Comments for Failed Code Lines
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/test-results/*.xml'
          github_token: ${{ secrets.GITHUB_TOKEN }}